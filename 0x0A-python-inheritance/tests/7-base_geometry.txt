===========================================================
How To Use ```integer_validator()``` of BaseGeometry Class
===========================================================
```integer_validator()``` is a simple method that verifies that the 
second argument passed is an integer and is greater than 0

============
Valid Input
============
..
..
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 12)
	>>> bg.integer_validator("my_int", 89)

=============
Invalid Input
=============
..
..
	>>> bg.integer_validator("my_int", 12.0)
	Traceback (most recent call last):
	...
	TypeError: my_int must be an integer
	
	>>> bg.integer_validator("my_int", 0)
        Traceback (most recent call last):
        ...
        ValueError: my_int must be greater than 0

	>>> bg.integer_validator("my_int", "John")
        Traceback (most recent call last):
        ...
        TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", [12.0, "Emmanuel", 1])
        Traceback (most recent call last):
        ...
        TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", -4)
        Traceback (most recent call last):
        ...
        ValueError: my_int must be greater than 0

	>>> bg.integer_validator("my_int")
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("my_int", 3, 4)
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator("my_int", None)
        Traceback (most recent call last):
        ...
        TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", True)
        Traceback (most recent call last):
        ...
        TypeError: my_int must be an integer
